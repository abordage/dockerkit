# =============================================================================
# General Configuration
# =============================================================================
# Available: 8.1, 8.2, 8.3, 8.4
PHP_VERSION=8.2

PROJECT_NAME=dockerkit
PROJECT_SUFFIX=82
COMPOSE_PROJECT_NAME="${PROJECT_NAME}-${PROJECT_SUFFIX}"

DEFAULT_USER="${PROJECT_NAME}"
DEFAULT_PASSWORD="${PROJECT_NAME}"

# =============================================================================
# Services Configuration
# =============================================================================
# Service activation - specify which services to start
# Available services: nginx php-fpm workspace postgres mysql mongo redis
#                    rabbitmq elasticsearch elasticvue minio mailpit portainer

# Predefined configurations
ENABLE_SERVICES_MINIMAL="workspace postgres"
ENABLE_SERVICES_DEV="nginx php-fpm workspace postgres mysql redis rabbitmq elasticsearch elasticvue minio mailpit"
ENABLE_SERVICES_FULL="nginx php-fpm workspace postgres mysql mongo redis rabbitmq elasticsearch elasticvue minio mailpit portainer"

# Active configuration (choose one of the above or create custom)
ENABLE_SERVICES="${ENABLE_SERVICES_DEV}"

# =============================================================================
# PHP Extensions Configuration
# =============================================================================
# Pre-installed: ctype curl date dom fileinfo filter hash iconv json libxml mbstring
#                mysqlnd opcache openssl pcre pdo pdo_sqlite phar posix random readline
#                reflection session simplexml sodium spl sqlite3 standard tokenizer
#                xml xmlreader xmlwriter zlib
#
DEPENDENCY_PHP_EXTENSIONS="amqp ast bcmath bz2 decimal exif gd gmp imagick intl pcov pcntl pdo_mysql pdo_pgsql pgsql redis soap sockets xdebug xlswriter yaml zip"

# =============================================================================
# Port Configuration
# =============================================================================
# Web Services
NGINX_HTTP_PORT=80
NGINX_HTTPS_PORT=443
BROWSERSYNC_HOST_PORT=3000
BROWSERSYNC_UI_HOST_PORT=3001
VITE_PORT=5173

# Databases
POSTGRES_PORT=5432
MYSQL_PORT=3306
MONGODB_PORT=27017
REDIS_PORT=6379

# Message Queues & Search
RABBITMQ_NODE_HOST_PORT=5672
RABBITMQ_MANAGEMENT_HTTP_HOST_PORT=15672
RABBITMQ_MANAGEMENT_HTTPS_HOST_PORT=15671
RABBITMQ_WEB_STOMP_HOST_PORT=15674
ELASTICSEARCH_HOST_HTTP_PORT=9200
ELASTICVUE_HTTP_PORT=9210

# Storage & Development Tools
MINIO_PORT=9002
MINIO_CONSOLE_PORT=9001
MAILPIT_HTTP_PORT=8125
MAILPIT_SMTP_PORT=1125
PORTAINER_PORT=9010

# =============================================================================
# Host Configuration
# =============================================================================
# Path to your application code (relative to docker-compose.yml)
# Examples: ../ (parent directory), ./myapp, /path/to/project
HOST_APP_PATH=../

# =============================================================================
# Container Configuration
# =============================================================================
APP_USER="${PROJECT_NAME}"

APP_UID=1000
APP_GID=1000

TZ=UTC+3

HEALTH_CHECK_INTERVAL=30s
HEALTH_CHECK_TIMEOUT=10s
HEALTH_CHECK_RETRIES=3

# =============================================================================
# Workspace Configuration
# =============================================================================
NODE_VERSION=22

# =============================================================================
# NGINX Configuration
# =============================================================================
# Available tags: https://hub.docker.com/_/nginx/tags
NGINX_VERSION=1.28.0-alpine

# =============================================================================
# PostgreSQL Configuration
# =============================================================================
# Repository: https://github.com/postgres/postgres
# Available tags: https://hub.docker.com/_/postgres/tags
POSTGRES_VERSION=17
POSTGRES_DB=default
POSTGRES_USER="${DEFAULT_USER}"
POSTGRES_PASSWORD="${DEFAULT_PASSWORD}"
POSTGRES_ENTRYPOINT_INITDB=./postgres/initdb.d

# =============================================================================
# MySQL Configuration
# =============================================================================
# Available tags: https://hub.docker.com/_/mysql/tags
MYSQL_VERSION=8.4.5
MYSQL_DATABASE=default
MYSQL_USER="${DEFAULT_USER}"
MYSQL_PASSWORD="${DEFAULT_PASSWORD}"
MYSQL_ROOT_PASSWORD=root
MYSQL_ENTRYPOINT_INITDB=./mysql/initdb.d

# =============================================================================
# MongoDB Configuration
# =============================================================================
# Repository: https://github.com/mongodb/mongo
# Available tags: https://hub.docker.com/_/mongo/tags
MONGODB_VERSION=8.0
MONGO_USERNAME="${DEFAULT_USER}"
MONGO_PASSWORD="${DEFAULT_PASSWORD}"

# =============================================================================
# Redis Configuration
# =============================================================================
# Repository: https://github.com/redis/redis
# Available tags: https://hub.docker.com/_/redis/tags
REDIS_VERSION=8.0.2
REDIS_PASSWORD="${DEFAULT_PASSWORD}"

# =============================================================================
# RabbitMQ Configuration
# =============================================================================
# Repository: https://github.com/rabbitmq/rabbitmq-server
# Available tags: https://hub.docker.com/_/rabbitmq/tags
RABBITMQ_VERSION=4.1.1
RABBITMQ_DEFAULT_USER="${DEFAULT_USER}"
RABBITMQ_DEFAULT_PASS="${DEFAULT_PASSWORD}"
RABBITMQ_ERLANG_COOKIE=secret-cookie

# =============================================================================
# Elasticsearch Configuration
# =============================================================================
# Repository: https://github.com/elastic/elasticsearch
# Available tags: https://hub.docker.com/_/elasticsearch
ELASTICSEARCH_VERSION=8.15.1
ELASTICSEARCH_LOG_LEVEL=WARN
ELASTICSEARCH_CACHE_SIZE=20%
ELASTICSEARCH_CLUSTER_NAME="${PROJECT_NAME}-cluster"
ELASTICSEARCH_NODE_NAME="${PROJECT_NAME}-node"
ELASTICSEARCH_REFRESH_INTERVAL=30s

# =============================================================================
# Elasticvue Configuration (Elasticsearch Web UI)
# =============================================================================
# Repository: https://github.com/cars10/elasticvue
# Available tags: https://hub.docker.com/r/cars10/elasticvue/tags
ELASTICVUE_VERSION=latest

# JSON array of cluster configurations for automatic setup
# Format: [{"name": "cluster_name", "uri": "http://host:port", "username": "user", "password": "pass"}]
# Note: username and password are optional, use API key as password if needed
ELASTICVUE_CLUSTERS="[{\"name\":\"${ELASTICSEARCH_CLUSTER_NAME}\",\"uri\":\"http://localhost:9200\"}]"

# =============================================================================
# MinIO Configuration
# =============================================================================
# Repository: https://github.com/minio/minio
# Available tags: https://hub.docker.com/r/minio/minio/tags
MINIO_VERSION=latest
MINIO_ROOT_USER="${DEFAULT_USER}"
MINIO_ROOT_PASSWORD="${DEFAULT_PASSWORD}"

# -----------------------------------------------------------------------------
# MinIO Automatic Bucket Creation Configuration
# -----------------------------------------------------------------------------
MINIO_BUCKETS_PUBLIC=documents,shared
MINIO_BUCKETS_UPLOAD=uploads,forms
MINIO_BUCKETS_DOWNLOAD=media,assets
MINIO_BUCKETS_PRIVATE=backups,logs

# =============================================================================
# Mailpit Configuration (Email Testing)
# =============================================================================
# Repository: https://github.com/axllent/mailpit
# Available tags: https://hub.docker.com/r/axllent/mailpit/tags
MAILPIT_VERSION=v1.26

# =============================================================================
# Portainer Configuration (Docker Management UI)
# =============================================================================
# Repository: https://github.com/portainer/portainer
# Available tags: https://hub.docker.com/r/portainer/portainer-ce/tags
PORTAINER_VERSION=2.31.0-alpine
