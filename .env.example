# =============================================================================
# General Configuration
# =============================================================================
# Available: 8.1, 8.2, 8.3, 8.4
PHP_VERSION=8.2

PROJECT_NAME=dockerkit
PROJECT_SUFFIX=82
COMPOSE_PROJECT_NAME="${PROJECT_NAME}-${PROJECT_SUFFIX}"

DEFAULT_USER="${PROJECT_NAME}"
DEFAULT_PASSWORD="${PROJECT_NAME}"

# =============================================================================
# Services Configuration
# =============================================================================
# Core Development Stack (required for most projects)
ENABLE_NGINX=1
ENABLE_PHP_FPM=1
ENABLE_WORKSPACE=1

# Database Services (choose one primary database + Redis for caching)
ENABLE_POSTGRES=1
ENABLE_MYSQL=0
ENABLE_MONGODB=0
ENABLE_REDIS=1

# Optional Services (can be disabled for lighter setup)
ENABLE_RABBITMQ=1
ENABLE_ELASTICSEARCH=1
ENABLE_DEJAVU=1
ENABLE_MINIO=1
ENABLE_MAILPIT=1
ENABLE_PORTAINER=1

# =============================================================================
# Port Configuration
# =============================================================================
# Web Services
NGINX_HTTP_PORT=80
NGINX_HTTPS_PORT=443
BROWSERSYNC_HOST_PORT=3000
BROWSERSYNC_UI_HOST_PORT=3001
VITE_PORT=5173

# Databases
POSTGRES_PORT=5432
MYSQL_PORT=3306
MONGODB_PORT=27017
REDIS_PORT=6379

# Message Queues & Search
RABBITMQ_NODE_HOST_PORT=5672
RABBITMQ_MANAGEMENT_HTTP_HOST_PORT=15672
RABBITMQ_MANAGEMENT_HTTPS_HOST_PORT=15671
RABBITMQ_WEB_STOMP_HOST_PORT=15674
ELASTICSEARCH_HOST_HTTP_PORT=9200
DEJAVU_HTTP_PORT=1358

# Storage & Development Tools
MINIO_PORT=9002
MINIO_CONSOLE_PORT=9001
MAILPIT_HTTP_PORT=8125
MAILPIT_SMTP_PORT=1125
PORTAINER_PORT=9010

# =============================================================================
# Host Configuration
# =============================================================================
# Path to your application code (relative to docker-compose.yml)
# Examples: ../ (parent directory), ./myapp, /path/to/project
HOST_APP_PATH=../

# Local directories for persistent data and logs
HOST_LOGS_PATH=./logs
HOST_DATA_PATH="$HOME/.${COMPOSE_PROJECT_NAME}/data"

# IDE Integration (for PHPStorm/VS Code debugging)
PHP_IDE_CONFIG="serverName=${COMPOSE_PROJECT_NAME}"

# =============================================================================
# Container Configuration
# =============================================================================
APP_USER="${PROJECT_NAME}"

APP_UID=1000
APP_GID=1000

TZ=UTC+3

HEALTH_CHECK_INTERVAL=30s
HEALTH_CHECK_TIMEOUT=10s
HEALTH_CHECK_RETRIES=3

# =============================================================================
# PHP Extensions Configuration (via mlocati/docker-php-extension-installer)
# =============================================================================
# Pre-installed: ctype curl date dom fileinfo filter hash iconv json libxml mbstring
#                mysqlnd opcache openssl pcre pdo pdo_sqlite phar posix random readline
#                reflection session simplexml sodium spl sqlite3 standard tokenizer
#                xml xmlreader xmlwriter zlib
#
DEPENDENCY_PHP_EXTENSIONS="amqp ast bcmath bz2 decimal exif gd gmp imagick intl pcov pdo_mysql pdo_pgsql redis soap sockets xlswriter yaml zip"

# =============================================================================
# PHP Configuration
# =============================================================================
PHP_DATE_TIMEZONE=UTC
PHP_DISPLAY_ERRORS=Off
PHP_DISPLAY_STARTUP_ERRORS=Off
PHP_ERROR_LOG=/dev/stderr
PHP_ERROR_REPORTING=22527
PHP_MEMORY_LIMIT=512M
PHP_OPCACHE_ENABLE=0
PHP_MAX_EXECUTION_TIME=3600
PHP_MAX_INPUT_TIME=-1
PHP_OUTPUT_BUFFERING=0
PHP_POST_MAX_SIZE=100M
PHP_UPLOAD_MAX_FILE_SIZE=100M
PHP_OPEN_BASEDIR=
PHP_SESSION_COOKIE_SECURE=false
PHP_XDEBUG_MODE=debug
PHP_XDEBUG_START_WITH_REQUEST=trigger
PHP_XDEBUG_CLIENT_HOST=host.docker.internal
PHP_XDEBUG_CLIENT_PORT=9003
PHP_XDEBUG_DISCOVER_CLIENT_HOST=0
PHP_XDEBUG_IDEKEY=PHPSTORM

# =============================================================================
# Workspace Configuration
# =============================================================================
# Base image: https://github.com/shinsenter/php
# Available tags: https://hub.docker.com/r/shinsenter/php/tags

# Database Clients
INSTALL_MYSQL_CLIENT=false
INSTALL_POSTGRES_CLIENT=true

# Node.js for frontend development
INSTALL_NODE=true
NODE_VERSION=22

# Development Tools
INSTALL_VACUUM=true
INSTALL_OPENAPI_GENERATOR=true
INSTALL_MINIO_CLIENT=true

# Optional terminal tools (may conflict on some systems)
ENABLE_FZF=1
ENABLE_STARSHIP=1

# =============================================================================
# NGINX Configuration
# =============================================================================
# Available tags: https://hub.docker.com/_/nginx/tags
NGINX_VERSION=1.28.0-alpine

# =============================================================================
# PostgreSQL Configuration
# =============================================================================
# Repository: https://github.com/postgres/postgres
# Available tags: https://hub.docker.com/_/postgres/tags
POSTGRES_VERSION=17
POSTGRES_CLIENT_VERSION=15
POSTGRES_DB=default
POSTGRES_USER="${DEFAULT_USER}"
POSTGRES_PASSWORD="${DEFAULT_PASSWORD}"
POSTGRES_ENTRYPOINT_INITDB=./postgres/initdb.d

# =============================================================================
# MySQL Configuration
# =============================================================================
# Available tags: https://hub.docker.com/_/mysql/tags
MYSQL_VERSION=8.4.5
MYSQL_DATABASE=default
MYSQL_USER="${DEFAULT_USER}"
MYSQL_PASSWORD="${DEFAULT_PASSWORD}"
MYSQL_ROOT_PASSWORD=root
MYSQL_ENTRYPOINT_INITDB=./mysql/initdb.d

# =============================================================================
# MongoDB Configuration
# =============================================================================
# Repository: https://github.com/mongodb/mongo
# Available tags: https://hub.docker.com/_/mongo/tags
MONGODB_VERSION=8.0
MONGO_USERNAME="${DEFAULT_USER}"
MONGO_PASSWORD="${DEFAULT_PASSWORD}"

# =============================================================================
# Redis Configuration
# =============================================================================
# Repository: https://github.com/redis/redis
# Available tags: https://hub.docker.com/_/redis/tags
REDIS_VERSION=8.0.2
REDIS_PASSWORD="${DEFAULT_PASSWORD}"

# =============================================================================
# RabbitMQ Configuration
# =============================================================================
# Repository: https://github.com/rabbitmq/rabbitmq-server
# Available tags: https://hub.docker.com/_/rabbitmq/tags
RABBITMQ_VERSION=4.1.1-management-alpine
RABBITMQ_DEFAULT_USER="${DEFAULT_USER}"
RABBITMQ_DEFAULT_PASS="${DEFAULT_PASSWORD}"
RABBITMQ_ERLANG_COOKIE=secret-cookie

# =============================================================================
# Elasticsearch Configuration
# =============================================================================
# Repository: https://github.com/elastic/elasticsearch
# Available tags: https://hub.docker.com/_/elasticsearch
ELASTICSEARCH_VERSION=8.15.1
ELASTICSEARCH_LOG_LEVEL=WARN
ELASTICSEARCH_CACHE_SIZE=20%
ELASTICSEARCH_CLUSTER_NAME="${PROJECT_NAME}-cluster"
ELASTICSEARCH_NODE_NAME="${PROJECT_NAME}-node"
ELASTICSEARCH_REFRESH_INTERVAL=30s

# =============================================================================
# Dejavu Configuration (Elasticsearch Web UI)
# =============================================================================
# Repository: https://github.com/appbaseio/dejavu
# Available tags: https://hub.docker.com/r/appbaseio/dejavu/tags
DEJAVU_VERSION=3.8.3

# =============================================================================
# MinIO Configuration
# =============================================================================
# Repository: https://github.com/minio/minio
# Available tags: https://hub.docker.com/r/minio/minio/tags
MINIO_VERSION=latest
MINIO_ROOT_USER="${DEFAULT_USER}"
MINIO_ROOT_PASSWORD="${DEFAULT_PASSWORD}"

# -----------------------------------------------------------------------------
# MinIO Automatic Bucket Creation Configuration
# -----------------------------------------------------------------------------
# Bucket Groups by Access Policy
# Public buckets - allow anonymous read and write access (GET + PUT)
# Use for: shared files, public assets, user-generated content
MINIO_BUCKETS_PUBLIC=documents,shared

# Upload-only buckets - allow anonymous write access only (PUT)
# Use for: file uploads, form submissions, user data collection
MINIO_BUCKETS_UPLOAD=uploads,forms

# Download-only buckets - allow anonymous read access only (GET)
# Use for: static assets, media files, public downloads
MINIO_BUCKETS_DOWNLOAD=media,assets

# Private buckets - no anonymous access (authentication required)
# Use for: sensitive data, backups, internal documents
MINIO_BUCKETS_PRIVATE=backups,logs

# Additional Configuration
# Enable versioning for all created buckets
# Keeps multiple versions of objects when they are modified
MINIO_ENABLE_VERSIONING=false

# Wait time for MinIO service to become available during startup (seconds)
MINIO_CLIENT_WAIT_TIME=60

# =============================================================================
# Mailpit Configuration (Email Testing)
# =============================================================================
# Repository: https://github.com/axllent/mailpit
# Available tags: https://hub.docker.com/r/axllent/mailpit/tags
MAILPIT_VERSION=v1.26

# =============================================================================
# Portainer Configuration (Docker Management UI)
# =============================================================================
# Repository: https://github.com/portainer/portainer
# Available tags: https://hub.docker.com/r/portainer/portainer-ce/tags
PORTAINER_VERSION=2.31.0-alpine
