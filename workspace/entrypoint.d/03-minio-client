#!/bin/bash

# ============================================================================
# MINIO CLIENT SETUP SCRIPT
# ============================================================================
# Configures MinIO client and creates buckets with policies
# ============================================================================
set -euo pipefail

# Color output functions
log_ok() { echo -e "[$SCRIPT_NAME] \033[32m[OK]\033[0m $*"; }
log_warn() { echo -e "[$SCRIPT_NAME] \033[33m[WARN]\033[0m $*"; }
log_error() { echo -e "[$SCRIPT_NAME] \033[31m[ERROR]\033[0m $*"; }
log_info() { echo "[$SCRIPT_NAME] $*"; }
log_skip() { echo -e "[$SCRIPT_NAME] \033[36m[SKIP]\033[0m $*"; }

SCRIPT_NAME=$(basename "$0")
readonly SCRIPT_NAME

# ============================================================================
# MAIN EXECUTION
# ============================================================================

log_info "Setting up MinIO client for workspace container..."

# Skip if MinIO disabled or mc not installed
if [[ "${ENABLE_MINIO:-0}" != "1" ]] || ! command -v mc >/dev/null 2>&1; then
    log_skip "MinIO client setup disabled or not installed"
    echo ""
    exit 0
fi

# Skip if credentials not set
if [[ -z "${MINIO_ROOT_USER:-}" ]] || [[ -z "${MINIO_ROOT_PASSWORD:-}" ]]; then
    log_warn "MINIO credentials not set, skipping setup"
    echo ""
    exit 0
fi

# Configure alias
if mc alias set local http://minio:9000 "$MINIO_ROOT_USER" "$MINIO_ROOT_PASSWORD" >/dev/null 2>&1; then
    log_ok "MinIO client configured successfully"
else
    log_warn "Failed to configure MinIO client"
fi

log_info "MinIO client setup completed"
echo ""
